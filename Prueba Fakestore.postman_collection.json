{
	"info": {
		"_postman_id": "1f6160c9-35e9-4ecf-9947-67ee631f7de0",
		"name": "Prueba Fakestore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27506437"
	},
	"item": [
		{
			"name": "Lista de productos",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "single product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Productos con categoria electronics'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Idproducto = pm.environment.get(\"id\");\r",
							"     pm.expect(Idproducto).to.eql(Idproducto);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products/{{Idproducto}}",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"{{Idproducto}}"
					]
				},
				"description": "Generated from cURL: curl -X GET \"https://fakestoreapi.com/products/1\""
			},
			"response": []
		},
		{
			"name": "Add new product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Crear un producto\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"title\"));\r",
							"    pm.expect(jsonData.price).to.eql(parseFloat(pm.environment.get(\"price\"))); // Convertir a número si es necesario\r",
							"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));\r",
							"    pm.expect(jsonData.image).to.eql(pm.environment.get(\"image\"));\r",
							"    pm.expect(jsonData.category).to.eql(pm.environment.get(\"category\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"{{title}}\",\r\n    \"price\": {{price}},\r\n    \"description\": \"{{description}}\",\r\n    \"image\": \"{{image}}\",\r\n    \"category\": \"{{category}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Actualizar la imagen del producto\", function () {\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"     var newImageUrl = pm.environment.get(\"newImageUrl\");\r",
							"\r",
							"    pm.expect(jsonData.image).to.eql(newImageUrl); // Verifica que la imagen realmente cambió\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"{{title}}\",\r\n    \"price\": {{price}},\r\n    \"description\": \"{{description}}\",\r\n    \"image\": \"{{newImageUrl}}\",\r\n    \"category\": \"{{category}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products/{{productId}}",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"{{productId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://fakestoreapi.com/products\", function (err, res) {\r",
							"    if (!err) {\r",
							"        var productos = res.json();\r",
							"        var producto = productos.find(p => p.price < 100); // Encuentra un producto con precio < 100\r",
							"        \r",
							"        if (producto) {\r",
							"            pm.environment.set(\"producto_id\", producto.id); // Guarda el ID en variable de entorno\r",
							"            console.log(\"Producto a eliminar:\", producto.id);\r",
							"        } else {\r",
							"            console.log(\"No hay productos con precio menor a 100\");\r",
							"        }\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products/{{producto_id}}",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"{{producto_id}}"
					]
				},
				"description": "Generated from cURL: curl -X DELETE \"'https://fakestoreapi.com/products/2\""
			},
			"response": []
		}
	]
}